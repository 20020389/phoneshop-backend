// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STORE
  DEFAULT
}

model User {
  id           Int           @id @default(autoincrement())
  uid          String        @unique @default(dbgenerated("(UUID())"))
  email        String        @unique
  password     String
  name         String?
  image        String?
  phoneNumber  String?
  profile      String?
  role         UserRole      @default(DEFAULT)
  verified     Boolean       @default(false)
  updateAt     DateTime      @default(now())
  lastLogin    DateTime      @default(now())
  registeredAt DateTime      @default(now())
  Store        Store[]
  Transaction  Transaction[]
}

model Store {
  id           Int           @id @default(autoincrement())
  uid          String        @unique @default(dbgenerated("(UUID())"))
  products     Phone[]
  managers     User[]
  transactions Transaction[]
}

model Phone {
  id          Int          @id @default(autoincrement())
  uid         String       @unique @default(dbgenerated("(UUID())"))
  name        String
  price       Int
  images      String
  tags        String?
  profile     String?
  description String?
  detail      String? // thông số kỹ thuật
  sold        Boolean?
  offers      PhoneOffer[]
  rating      PhoneRating  @relation(fields: [ratingId], references: [uid])
  ratingId    String       @unique
  Stores      Store[]
}

model PhoneOffer {
  id      Int    @id @default(autoincrement())
  uid     String @unique @default(dbgenerated("(UUID())"))
  price   Int
  color   String //array
  storage String
  Phone   Phone  @relation(fields: [phoneId], references: [uid])
  phoneId String
}

model PhoneRating {
  id          Int    @id @default(autoincrement())
  uid         String @unique @default(dbgenerated("(UUID())"))
  ratingValue Float
  evaluated   String
  Phone       Phone?
}

model Transaction {
  id         Int              @id @default(autoincrement())
  uid        String           @unique @default(dbgenerated("(UUID())"))
  productsID StringTemplate[]
  consumer   User             @relation(fields: [userId], references: [id])
  userId     Int
  providers  Store[]
}

// define based
model StringTemplate {
  id            Int          @id @default(autoincrement())
  value         String
  Transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId Int?
}
